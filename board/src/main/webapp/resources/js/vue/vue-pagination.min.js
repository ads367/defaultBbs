!function (n) { if ("object" == typeof exports && "undefined" != typeof module) module.exports = n(); else if ("function" == typeof define && define.amd) define([], n); else { ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).VuePagination = n() } }(function () { return function n(t, e, i) { function a(u, o) { if (!e[u]) { if (!t[u]) { var s = "function" == typeof require && require; if (!o && s) return s(u, !0); if (r) return r(u, !0); var c = new Error("Cannot find module '" + u + "'"); throw c.code = "MODULE_NOT_FOUND", c } var l = e[u] = { exports: {} }; t[u][0].call(l.exports, function (n) { var e = t[u][1][n]; return a(e || n) }, l, l.exports, n, t, e, i) } return e[u].exports } for (var r = "function" == typeof require && require, u = 0; u < i.length; u++) a(i[u]); return a }({ 1: [function (n, t, e) { t.exports = '<div class="VuePagination">\n  <ul \n  class="pagination VuePagination__pagination">\n\n <li class="VuePagination__pagination-item VuePagination__pagination-item-prev-page"\nv-bind:class="allowedPage(page-1)?\'\':\'disabled\'">\n<a href="javascript:void(0);"\n@click="prev()">&lt;</a>\n</li>\n\n<li class="VuePagination__pagination-item"\nv-for="page in pages"\nv-bind:class="isActive(page)?\'active\':\'\'">\n<a href="javascript:void(0);"\n@click="setPage(page)">{{page}}</a>\n</li>\n\n<li class="VuePagination__pagination-item VuePagination__pagination-item-next-page"\nv-bind:class="allowedPage(page + 1)?\'\':\'disabled\'">\n<a href="javascript:void(0);"\n@click="next()">&gt;</a>\n</li>\n\n</ul>\n\n\n</div>\n' }, {}], 2: [function (n, t, e) { e.install = function (t) { t.component("pagination", { template: n("./src/template.html"), data: function () { return { page: 1 } }, props: { for: { type: String, required: !0 }, records: { type: Number, required: !0 }, perPage: { type: Number, required: !1, default: 25 }, chunk: { type: Number, required: !1, default: 10 }, countText: { type: String, required: !1, default: "{count} records" } }, computed: { pages: function () { return this.records ? (n = this.paginationStart, t = this.pagesInCurrentChunk, Array.apply(0, Array(t)).map(function (t, e) { return e + n })) : []; var n, t }, totalPages: function () { return this.records ? Math.ceil(this.records / this.perPage) : 1 }, totalChunks: function () { return Math.ceil(this.totalPages / this.chunk) }, currentChunk: function () { return Math.ceil(this.page / this.chunk) }, paginationStart: function () { return (this.currentChunk - 1) * this.chunk + 1 }, count: function () { return this.countText.replace("{count}", this.records) }, pagesInCurrentChunk: function () { return this.paginationStart + this.chunk <= this.totalPages ? this.chunk : this.totalPages - this.paginationStart + 1 } }, methods: { setPage: function (n) { return !!this.allowedPage(n) && (this.page = n, this.$emit("vue-pagination::table", n), !0) }, next: function () { return this.setPage(this.page + 1) }, prev: function () { return this.setPage(this.page - 1) }, nextChunk: function () { return this.setChunk(1) }, prevChunk: function () { return this.setChunk(-1) }, setChunk: function (n) { this.setPage((this.currentChunk - 1 + n) * this.chunk + 1) }, allowedPage: function (n) { return n >= 1 && n <= this.totalPages }, allowedChunk: function (n) { return 1 == n && this.currentChunk < this.totalChunks || -1 == n && this.currentChunk > 1 }, isActive: function (n) { return this.page == n } } }) } }, { "./src/template.html": 1 }] }, {}, [2])(2) });